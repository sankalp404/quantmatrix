name: 🚀 QuantMatrix V2 - Continuous Deployment

on:
  workflow_run:
    workflows: ["🧪 QuantMatrix V2 - Continuous Integration"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      force_deploy:
        description: 'Force deployment even if tests failed'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: quantmatrix

jobs:
  # Pre-deployment validation
  validate:
    name: 🔍 Pre-deployment Validation
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔍 Validate deployment readiness
        run: |
          echo "🔍 Checking deployment prerequisites..."
          echo "✅ Source code checkout complete"
          echo "✅ Workflow validation passed"
  
  # Build and push Docker images
  build:
    name: 🐳 Build & Push Images
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      backend-image: ${{ steps.backend.outputs.image }}
      frontend-image: ${{ steps.frontend.outputs.image }}
      
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📝 Extract metadata for backend
        id: backend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: 🏗️ Build and push backend image
        id: backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
      
      - name: 📝 Extract metadata for frontend
        id: frontend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: 🏗️ Build and push frontend image
        id: frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}

  # Deploy to staging
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: 
      name: staging
      url: https://staging.quantmatrix.com
      
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🚀 Deploy to staging
        run: |
          echo "🚀 Deploying to staging environment..."
          echo "Backend image: ${{ needs.build.outputs.backend-image }}"
          echo "Frontend image: ${{ needs.build.outputs.frontend-image }}"
          
          # Add your staging deployment commands here
          # For example, kubectl, docker-compose, or cloud provider CLI commands
          
          echo "✅ Staging deployment completed"
      
      - name: 🧪 Run staging smoke tests
        run: |
          echo "🧪 Running staging smoke tests..."
          # Add staging validation tests here
          curl -f https://staging.quantmatrix.com/health || exit 1
          echo "✅ Staging smoke tests passed"

  # Deploy to production (manual approval required)
  deploy-production:
    name: 🎯 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, deploy-staging]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: 
      name: production
      url: https://quantmatrix.com
      
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🎯 Deploy to production
        run: |
          echo "🎯 Deploying to production environment..."
          echo "Backend image: ${{ needs.build.outputs.backend-image }}"
          echo "Frontend image: ${{ needs.build.outputs.frontend-image }}"
          
          # Add your production deployment commands here
          # For example, kubectl, docker-compose, or cloud provider CLI commands
          
          echo "✅ Production deployment completed"
      
      - name: 🧪 Run production smoke tests
        run: |
          echo "🧪 Running production smoke tests..."
          # Add production validation tests here
          curl -f https://quantmatrix.com/health || exit 1
          echo "✅ Production smoke tests passed"
      
      - name: 📢 Notify deployment success
        run: |
          echo "📢 Production deployment successful!"
          # Add notification logic here (Slack, Discord, etc.)

  # Rollback capability
  rollback:
    name: 🔄 Rollback
    runs-on: ubuntu-latest
    if: failure() && (needs.deploy-staging.result == 'failure' || needs.deploy-production.result == 'failure')
    needs: [deploy-staging, deploy-production]
    
    steps:
      - name: 🔄 Rollback deployment
        run: |
          echo "🔄 Rolling back deployment due to failure..."
          # Add rollback logic here
          echo "✅ Rollback completed" 